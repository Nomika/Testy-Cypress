package org.example.Stream;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.List;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class StreamTest {
    public static void main(String[] args) {
        // tworzenie strumienia

        List<String> names = Arrays.asList("Marinika", "Królewna", "Olja", "Seva");

        Stream<String> streamNames = names.stream();

        Stream<Integer> streamInt = Arrays.asList(new Integer[]{1,2,3,4}).stream();
        DoubleStream doubleStream = DoubleStream.of(4.7,4.9,4.6,5,6.7,7.8,7.0,8.7,9.4);
        IntStream intStream = IntStream.range(1,100);

        //przetwarzanie danych
        //filter - filtrowanie
        //map- zmienianie każdego elementu na cos innego//liczby i zwiększanie je 2 krotnie np.
        //limit - zwraca określoną ilosc elementów
        //peek - pozwala przeprowadzić operację na każdym elemencie

        //operacie for/each wykonanie akcji dla każdego z elementów
        // count- zwróci ilość elementów w strumieniu
        // allMatch - sprawdza zy elementy spełniają jakiś warunek
        //collect- zwraca nowy typ na podstawie strumienia

        streamNames.filter(el -> el.startsWith("M"))
                   .map(el -> el.toUpperCase())
                   .forEach(el -> System.out.println(el));

       long count = intStream.filter(el -> el< 7)
                 .map(el -> el*2)
                 .limit(10)
                 //.forEach(el -> System.out.println(el))
                 .count();



        System.out.println(count);

          doubleStream.filter(el -> el< 7.6)
                //.map(el -> el*2)
                .limit(3)
                .forEach(el -> System.out.println(el));



    }
}
